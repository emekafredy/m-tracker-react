// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login component it fails when user makes a bad request 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    action={
      Object {
        "loginUser": [MockFunction],
      }
    }
    auth={
      Object {
        "isAuthenticated": true,
      }
    }
    errors={Object {}}
    history={
      Object {
        "push": [MockFunction] {
          "calls": Array [
            Array [
              "/requests",
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="card"
      >
        <form
          className="auth-form"
          onSubmit={[Function]}
        >
          <div
            className="centre-div"
          >
            <h1>
               Login 
            </h1>
          </div>
          <input
            className="input-class"
            id="email"
            name="email"
            onChange={[Function]}
            placeholder="Email"
            type="text"
            value=""
          />
          
          <input
            className="input-class"
            id="password"
            name="password"
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value=""
          />
          
          <input
            id="submit"
            type="submit"
            value="Login"
          />
        </form>
        <div
          className="centre-div"
        >
          <p>
            Don't have an account ?
          </p>
          <Link
            className="links"
            replace={false}
            to="/register"
          >
             Sign up 
          </Link>
        </div>
      </div>,
      "className": "signUp",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            className="auth-form"
            onSubmit={[Function]}
          >
            <div
              className="centre-div"
            >
              <h1>
                 Login 
              </h1>
            </div>
            <input
              className="input-class"
              id="email"
              name="email"
              onChange={[Function]}
              placeholder="Email"
              type="text"
              value=""
            />
            
            <input
              className="input-class"
              id="password"
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />
            
            <input
              id="submit"
              type="submit"
              value="Login"
            />
          </form>,
          <div
            className="centre-div"
          >
            <p>
              Don't have an account ?
            </p>
            <Link
              className="links"
              replace={false}
              to="/register"
            >
               Sign up 
            </Link>
          </div>,
        ],
        "className": "card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="centre-div"
              >
                <h1>
                   Login 
                </h1>
              </div>,
              <input
                className="input-class"
                id="email"
                name="email"
                onChange={[Function]}
                placeholder="Email"
                type="text"
                value=""
              />,
              "",
              <input
                className="input-class"
                id="password"
                name="password"
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
              />,
              "",
              <input
                id="submit"
                type="submit"
                value="Login"
              />,
            ],
            "className": "auth-form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1>
                   Login 
                </h1>,
                "className": "centre-div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Login ",
                },
                "ref": null,
                "rendered": " Login ",
                "type": "h1",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input-class",
                "id": "email",
                "name": "email",
                "onChange": [Function],
                "placeholder": "Email",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input-class",
                "id": "password",
                "name": "password",
                "onChange": [Function],
                "placeholder": "Password",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "submit",
                "type": "submit",
                "value": "Login",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                Don't have an account ?
              </p>,
              <Link
                className="links"
                replace={false}
                to="/register"
              >
                 Sign up 
              </Link>,
            ],
            "className": "centre-div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Don't have an account ?",
              },
              "ref": null,
              "rendered": "Don't have an account ?",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": " Sign up ",
                "className": "links",
                "replace": false,
                "to": "/register",
              },
              "ref": null,
              "rendered": " Sign up ",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="card"
        >
          <form
            className="auth-form"
            onSubmit={[Function]}
          >
            <div
              className="centre-div"
            >
              <h1>
                 Login 
              </h1>
            </div>
            <input
              className="input-class"
              id="email"
              name="email"
              onChange={[Function]}
              placeholder="Email"
              type="text"
              value=""
            />
            
            <input
              className="input-class"
              id="password"
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />
            
            <input
              id="submit"
              type="submit"
              value="Login"
            />
          </form>
          <div
            className="centre-div"
          >
            <p>
              Don't have an account ?
            </p>
            <Link
              className="links"
              replace={false}
              to="/register"
            >
               Sign up 
            </Link>
          </div>
        </div>,
        "className": "signUp",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <form
              className="auth-form"
              onSubmit={[Function]}
            >
              <div
                className="centre-div"
              >
                <h1>
                   Login 
                </h1>
              </div>
              <input
                className="input-class"
                id="email"
                name="email"
                onChange={[Function]}
                placeholder="Email"
                type="text"
                value=""
              />
              
              <input
                className="input-class"
                id="password"
                name="password"
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
              />
              
              <input
                id="submit"
                type="submit"
                value="Login"
              />
            </form>,
            <div
              className="centre-div"
            >
              <p>
                Don't have an account ?
              </p>
              <Link
                className="links"
                replace={false}
                to="/register"
              >
                 Sign up 
              </Link>
            </div>,
          ],
          "className": "card",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="centre-div"
                >
                  <h1>
                     Login 
                  </h1>
                </div>,
                <input
                  className="input-class"
                  id="email"
                  name="email"
                  onChange={[Function]}
                  placeholder="Email"
                  type="text"
                  value=""
                />,
                "",
                <input
                  className="input-class"
                  id="password"
                  name="password"
                  onChange={[Function]}
                  placeholder="Password"
                  type="password"
                  value=""
                />,
                "",
                <input
                  id="submit"
                  type="submit"
                  value="Login"
                />,
              ],
              "className": "auth-form",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <h1>
                     Login 
                  </h1>,
                  "className": "centre-div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Login ",
                  },
                  "ref": null,
                  "rendered": " Login ",
                  "type": "h1",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input-class",
                  "id": "email",
                  "name": "email",
                  "onChange": [Function],
                  "placeholder": "Email",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input-class",
                  "id": "password",
                  "name": "password",
                  "onChange": [Function],
                  "placeholder": "Password",
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "submit",
                  "type": "submit",
                  "value": "Login",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  Don't have an account ?
                </p>,
                <Link
                  className="links"
                  replace={false}
                  to="/register"
                >
                   Sign up 
                </Link>,
              ],
              "className": "centre-div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Don't have an account ?",
                },
                "ref": null,
                "rendered": "Don't have an account ?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": " Sign up ",
                  "className": "links",
                  "replace": false,
                  "to": "/register",
                },
                "ref": null,
                "rendered": " Sign up ",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Login component renders the Login component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    action={
      Object {
        "loginUser": [MockFunction],
      }
    }
    auth={
      Object {
        "isAuthenticated": true,
      }
    }
    errors={Object {}}
    history={
      Object {
        "push": [MockFunction] {
          "calls": Array [
            Array [
              "/requests",
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="card"
      >
        <form
          className="auth-form"
          onSubmit={[Function]}
        >
          <div
            className="centre-div"
          >
            <h1>
               Login 
            </h1>
          </div>
          <input
            className="input-class"
            id="email"
            name="email"
            onChange={[Function]}
            placeholder="Email"
            type="text"
            value=""
          />
          
          <input
            className="input-class"
            id="password"
            name="password"
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value=""
          />
          
          <input
            id="submit"
            type="submit"
            value="Login"
          />
        </form>
        <div
          className="centre-div"
        >
          <p>
            Don't have an account ?
          </p>
          <Link
            className="links"
            replace={false}
            to="/register"
          >
             Sign up 
          </Link>
        </div>
      </div>,
      "className": "signUp",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            className="auth-form"
            onSubmit={[Function]}
          >
            <div
              className="centre-div"
            >
              <h1>
                 Login 
              </h1>
            </div>
            <input
              className="input-class"
              id="email"
              name="email"
              onChange={[Function]}
              placeholder="Email"
              type="text"
              value=""
            />
            
            <input
              className="input-class"
              id="password"
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />
            
            <input
              id="submit"
              type="submit"
              value="Login"
            />
          </form>,
          <div
            className="centre-div"
          >
            <p>
              Don't have an account ?
            </p>
            <Link
              className="links"
              replace={false}
              to="/register"
            >
               Sign up 
            </Link>
          </div>,
        ],
        "className": "card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="centre-div"
              >
                <h1>
                   Login 
                </h1>
              </div>,
              <input
                className="input-class"
                id="email"
                name="email"
                onChange={[Function]}
                placeholder="Email"
                type="text"
                value=""
              />,
              "",
              <input
                className="input-class"
                id="password"
                name="password"
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
              />,
              "",
              <input
                id="submit"
                type="submit"
                value="Login"
              />,
            ],
            "className": "auth-form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1>
                   Login 
                </h1>,
                "className": "centre-div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Login ",
                },
                "ref": null,
                "rendered": " Login ",
                "type": "h1",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input-class",
                "id": "email",
                "name": "email",
                "onChange": [Function],
                "placeholder": "Email",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input-class",
                "id": "password",
                "name": "password",
                "onChange": [Function],
                "placeholder": "Password",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "submit",
                "type": "submit",
                "value": "Login",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                Don't have an account ?
              </p>,
              <Link
                className="links"
                replace={false}
                to="/register"
              >
                 Sign up 
              </Link>,
            ],
            "className": "centre-div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Don't have an account ?",
              },
              "ref": null,
              "rendered": "Don't have an account ?",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": " Sign up ",
                "className": "links",
                "replace": false,
                "to": "/register",
              },
              "ref": null,
              "rendered": " Sign up ",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="card"
        >
          <form
            className="auth-form"
            onSubmit={[Function]}
          >
            <div
              className="centre-div"
            >
              <h1>
                 Login 
              </h1>
            </div>
            <input
              className="input-class"
              id="email"
              name="email"
              onChange={[Function]}
              placeholder="Email"
              type="text"
              value=""
            />
            
            <input
              className="input-class"
              id="password"
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />
            
            <input
              id="submit"
              type="submit"
              value="Login"
            />
          </form>
          <div
            className="centre-div"
          >
            <p>
              Don't have an account ?
            </p>
            <Link
              className="links"
              replace={false}
              to="/register"
            >
               Sign up 
            </Link>
          </div>
        </div>,
        "className": "signUp",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <form
              className="auth-form"
              onSubmit={[Function]}
            >
              <div
                className="centre-div"
              >
                <h1>
                   Login 
                </h1>
              </div>
              <input
                className="input-class"
                id="email"
                name="email"
                onChange={[Function]}
                placeholder="Email"
                type="text"
                value=""
              />
              
              <input
                className="input-class"
                id="password"
                name="password"
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
              />
              
              <input
                id="submit"
                type="submit"
                value="Login"
              />
            </form>,
            <div
              className="centre-div"
            >
              <p>
                Don't have an account ?
              </p>
              <Link
                className="links"
                replace={false}
                to="/register"
              >
                 Sign up 
              </Link>
            </div>,
          ],
          "className": "card",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="centre-div"
                >
                  <h1>
                     Login 
                  </h1>
                </div>,
                <input
                  className="input-class"
                  id="email"
                  name="email"
                  onChange={[Function]}
                  placeholder="Email"
                  type="text"
                  value=""
                />,
                "",
                <input
                  className="input-class"
                  id="password"
                  name="password"
                  onChange={[Function]}
                  placeholder="Password"
                  type="password"
                  value=""
                />,
                "",
                <input
                  id="submit"
                  type="submit"
                  value="Login"
                />,
              ],
              "className": "auth-form",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <h1>
                     Login 
                  </h1>,
                  "className": "centre-div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Login ",
                  },
                  "ref": null,
                  "rendered": " Login ",
                  "type": "h1",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input-class",
                  "id": "email",
                  "name": "email",
                  "onChange": [Function],
                  "placeholder": "Email",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input-class",
                  "id": "password",
                  "name": "password",
                  "onChange": [Function],
                  "placeholder": "Password",
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "submit",
                  "type": "submit",
                  "value": "Login",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  Don't have an account ?
                </p>,
                <Link
                  className="links"
                  replace={false}
                  to="/register"
                >
                   Sign up 
                </Link>,
              ],
              "className": "centre-div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Don't have an account ?",
                },
                "ref": null,
                "rendered": "Don't have an account ?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": " Sign up ",
                  "className": "links",
                  "replace": false,
                  "to": "/register",
                },
                "ref": null,
                "rendered": " Sign up ",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
