// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navbar renders the Navbar component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar
    auth={
      Object {
        "isAuthenticated": true,
        "user": Object {
          "user": Object {
            "firstname": "emeka",
          },
        },
      }
    }
    logoutUser={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          id="brand"
        >
          <span>
            <Link
              replace={false}
              to="/"
            >
              M-Tracker
            </Link>
          </span>
        </div>,
        <div
          className="nav-icon"
        >
          <label
            htmlFor="nav-check"
          >
            <span />
            <span />
            <span />
          </label>
        </div>,
        <input
          id="nav-check"
          type="checkbox"
        />,
        <div
          className="nav-links"
        >
          <Link
            className="auth-links"
            replace={false}
            to="/new"
          >
            <i
              className="fa fa-plus"
            />
             Create new request
          </Link>
          <Link
            className="auth-links"
            id="logoutuser"
            onClick={[Function]}
            replace={false}
            to="/"
          >
            Logout
          </Link>
          <Link
            className="auth-links"
            replace={false}
            to=""
          >
            <span
              className="role"
            >
              <i
                className="fa fa-user-circle-o"
              />
               
              emeka
            </span>
          </Link>
        </div>,
      ],
      "className": "navbar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span>
            <Link
              replace={false}
              to="/"
            >
              M-Tracker
            </Link>
          </span>,
          "id": "brand",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              replace={false}
              to="/"
            >
              M-Tracker
            </Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "M-Tracker",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": "M-Tracker",
            "type": [Function],
          },
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <label
            htmlFor="nav-check"
          >
            <span />
            <span />
            <span />
          </label>,
          "className": "nav-icon",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span />,
              <span />,
              <span />,
            ],
            "htmlFor": "nav-check",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "span",
            },
          ],
          "type": "label",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "nav-check",
          "type": "checkbox",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              className="auth-links"
              replace={false}
              to="/new"
            >
              <i
                className="fa fa-plus"
              />
               Create new request
            </Link>,
            <Link
              className="auth-links"
              id="logoutuser"
              onClick={[Function]}
              replace={false}
              to="/"
            >
              Logout
            </Link>,
            <Link
              className="auth-links"
              replace={false}
              to=""
            >
              <span
                className="role"
              >
                <i
                  className="fa fa-user-circle-o"
                />
                 
                emeka
              </span>
            </Link>,
          ],
          "className": "nav-links",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <i
                  className="fa fa-plus"
                />,
                " Create new request",
              ],
              "className": "auth-links",
              "replace": false,
              "to": "/new",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fa fa-plus",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              " Create new request",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Logout",
              "className": "auth-links",
              "id": "logoutuser",
              "onClick": [Function],
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": "Logout",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <span
                className="role"
              >
                <i
                  className="fa fa-user-circle-o"
                />
                 
                emeka
              </span>,
              "className": "auth-links",
              "replace": false,
              "to": "",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <i
                    className="fa fa-user-circle-o"
                  />,
                  " ",
                  "emeka",
                ],
                "className": "role",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fa fa-user-circle-o",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                " ",
                "emeka",
              ],
              "type": "span",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            id="brand"
          >
            <span>
              <Link
                replace={false}
                to="/"
              >
                M-Tracker
              </Link>
            </span>
          </div>,
          <div
            className="nav-icon"
          >
            <label
              htmlFor="nav-check"
            >
              <span />
              <span />
              <span />
            </label>
          </div>,
          <input
            id="nav-check"
            type="checkbox"
          />,
          <div
            className="nav-links"
          >
            <Link
              className="auth-links"
              replace={false}
              to="/new"
            >
              <i
                className="fa fa-plus"
              />
               Create new request
            </Link>
            <Link
              className="auth-links"
              id="logoutuser"
              onClick={[Function]}
              replace={false}
              to="/"
            >
              Logout
            </Link>
            <Link
              className="auth-links"
              replace={false}
              to=""
            >
              <span
                className="role"
              >
                <i
                  className="fa fa-user-circle-o"
                />
                 
                emeka
              </span>
            </Link>
          </div>,
        ],
        "className": "navbar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span>
              <Link
                replace={false}
                to="/"
              >
                M-Tracker
              </Link>
            </span>,
            "id": "brand",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                replace={false}
                to="/"
              >
                M-Tracker
              </Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "M-Tracker",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "M-Tracker",
              "type": [Function],
            },
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <label
              htmlFor="nav-check"
            >
              <span />
              <span />
              <span />
            </label>,
            "className": "nav-icon",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span />,
                <span />,
                <span />,
              ],
              "htmlFor": "nav-check",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "span",
              },
            ],
            "type": "label",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "nav-check",
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                className="auth-links"
                replace={false}
                to="/new"
              >
                <i
                  className="fa fa-plus"
                />
                 Create new request
              </Link>,
              <Link
                className="auth-links"
                id="logoutuser"
                onClick={[Function]}
                replace={false}
                to="/"
              >
                Logout
              </Link>,
              <Link
                className="auth-links"
                replace={false}
                to=""
              >
                <span
                  className="role"
                >
                  <i
                    className="fa fa-user-circle-o"
                  />
                   
                  emeka
                </span>
              </Link>,
            ],
            "className": "nav-links",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <i
                    className="fa fa-plus"
                  />,
                  " Create new request",
                ],
                "className": "auth-links",
                "replace": false,
                "to": "/new",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fa fa-plus",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                " Create new request",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Logout",
                "className": "auth-links",
                "id": "logoutuser",
                "onClick": [Function],
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Logout",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <span
                  className="role"
                >
                  <i
                    className="fa fa-user-circle-o"
                  />
                   
                  emeka
                </span>,
                "className": "auth-links",
                "replace": false,
                "to": "",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <i
                      className="fa fa-user-circle-o"
                    />,
                    " ",
                    "emeka",
                  ],
                  "className": "role",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "fa fa-user-circle-o",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  " ",
                  "emeka",
                ],
                "type": "span",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
